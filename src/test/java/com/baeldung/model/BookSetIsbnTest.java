// ********RoostGPT********
/*
Test generated by RoostGPT for test hsbc-hypermedia-claude using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=setIsbn_6abb7fa0f5
ROOST_METHOD_SIG_HASH=setIsbn_c689d3c270

Here are the JUnit test scenarios for the setIsbn method:

Scenario 1: Valid ISBN

Details:
  TestName: validIsbn()
  Description: This test verifies that the setIsbn method correctly sets a valid ISBN value for the book.
Execution:
  Arrange: Create a new instance of the Book class.
  Act: Invoke the setIsbn method with a valid ISBN string.
  Assert: Use assertEquals to verify that the isbn field of the Book instance matches the provided ISBN value.
Validation:
  The assertion ensures that the setIsbn method properly assigns the provided ISBN to the isbn field.
  This test is important to validate that the ISBN, a unique identifier for the book, is correctly stored.

Scenario 2: Null ISBN

Details:
  TestName: nullIsbn()
  Description: This test checks the behavior of the setIsbn method when a null value is passed as the ISBN.
Execution:
  Arrange: Create a new instance of the Book class.
  Act: Invoke the setIsbn method with a null value.
  Assert: Use assertNull to verify that the isbn field of the Book instance remains null after the method invocation.
Validation:
  The assertion confirms that the setIsbn method handles a null ISBN value gracefully and does not throw an exception.
  This test is crucial to ensure that the method can handle null values without causing unexpected behavior or crashes.

Scenario 3: Empty ISBN

Details:
  TestName: emptyIsbn()
  Description: This test verifies the behavior of the setIsbn method when an empty string is provided as the ISBN.
Execution:
  Arrange: Create a new instance of the Book class.
  Act: Invoke the setIsbn method with an empty string.
  Assert: Use assertEquals to verify that the isbn field of the Book instance is set to an empty string.
Validation:
  The assertion ensures that the setIsbn method allows setting an empty string as the ISBN value.
  This test is important to validate that the method does not reject or modify empty ISBN values, as per the current implementation.

Scenario 4: ISBN with Whitespace

Details:
  TestName: isbnWithWhitespace()
  Description: This test checks if the setIsbn method correctly handles ISBN values containing leading or trailing whitespace.
Execution:
  Arrange: Create a new instance of the Book class.
  Act: Invoke the setIsbn method with an ISBN string containing leading and trailing whitespace.
  Assert: Use assertEquals to verify that the isbn field of the Book instance matches the trimmed ISBN value.
Validation:
  The assertion confirms that the setIsbn method automatically trims any leading or trailing whitespace from the provided ISBN.
  This test is important to ensure that the method handles ISBN values consistently, regardless of any unintentional whitespace.

Note: The provided setIsbn method does not include any validation or error handling for invalid ISBN formats. If such validation is required, additional test scenarios should be added to cover those cases once the method is updated with the necessary validation logic.
*/

// ********RoostGPT********
package com.baeldung.model;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class BookSetIsbnTest {

    private Book book;

    @Before
    public void setUp() {
        book = new Book();
    }

    @Test
    public void validIsbn() {
        String validIsbn = "978-0-596-52068-7";
        book.setIsbn(validIsbn);
        assertEquals(validIsbn, book.getIsbn());
    }

    @Test
    public void nullIsbn() {
        book.setIsbn(null);
        assertNull(book.getIsbn());
    }

    @Test
    public void emptyIsbn() {
        String emptyIsbn = "";
        book.setIsbn(emptyIsbn);
        assertEquals(emptyIsbn, book.getIsbn());
    }

    @Test
    public void isbnWithWhitespace() {
        String isbnWithWhitespace = "  978-0-596-52068-7  ";
        book.setIsbn(isbnWithWhitespace);
        assertEquals(isbnWithWhitespace.trim(), book.getIsbn());
    }
}
