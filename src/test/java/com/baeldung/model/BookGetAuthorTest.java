// ********RoostGPT********
/*
Test generated by RoostGPT for test hsbc-hypermedia-claude using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=getAuthor_a75753e41e
ROOST_METHOD_SIG_HASH=getAuthor_ce8d95a763

Here are the JUnit test scenarios for the getAuthor() method:

Scenario 1: Retrieve Author When Set

Details:
  TestName: retrieveAuthorWhenSet()
  Description: This test verifies that the getAuthor() method returns the correct author value when it has been previously set.
Execution:
  Arrange: Create an instance of the class containing the getAuthor() method and set the author value using the corresponding setter method.
  Act: Call the getAuthor() method on the instance.
  Assert: Use assertEquals to compare the returned author value with the expected value.
Validation:
  The assertion checks if the getAuthor() method retrieves the correct author value that was set earlier.
  This test ensures that the getAuthor() method functions properly and returns the expected author value when it has been set.

Scenario 2: Retrieve Author When Not Set

Details:
  TestName: retrieveAuthorWhenNotSet()
  Description: This test verifies the behavior of the getAuthor() method when the author value has not been set.
Execution:
  Arrange: Create an instance of the class containing the getAuthor() method without setting the author value.
  Act: Call the getAuthor() method on the instance.
  Assert: Use assertNull to check if the returned author value is null.
Validation:
  The assertion verifies that the getAuthor() method returns null when the author value has not been set.
  This test ensures that the getAuthor() method handles the case when the author value is not initialized and returns null instead of throwing an exception or returning an empty string.

Scenario 3: Retrieve Author After Setting to Null

Details:
  TestName: retrieveAuthorAfterSettingToNull()
  Description: This test verifies the behavior of the getAuthor() method after explicitly setting the author value to null.
Execution:
  Arrange: Create an instance of the class containing the getAuthor() method and set the author value to null using the corresponding setter method.
  Act: Call the getAuthor() method on the instance.
  Assert: Use assertNull to check if the returned author value is null.
Validation:
  The assertion confirms that the getAuthor() method returns null when the author value has been explicitly set to null.
  This test ensures that the getAuthor() method correctly handles the case when the author value is intentionally set to null and returns null accordingly.

Scenario 4: Retrieve Author After Setting to Empty String

Details:
  TestName: retrieveAuthorAfterSettingToEmptyString()
  Description: This test verifies the behavior of the getAuthor() method after setting the author value to an empty string.
Execution:
  Arrange: Create an instance of the class containing the getAuthor() method and set the author value to an empty string using the corresponding setter method.
  Act: Call the getAuthor() method on the instance.
  Assert: Use assertEquals to compare the returned author value with an empty string.
Validation:
  The assertion checks if the getAuthor() method returns an empty string when the author value has been set to an empty string.
  This test ensures that the getAuthor() method correctly handles the case when the author value is set to an empty string and returns it as expected.

These test scenarios cover different cases for the getAuthor() method, including retrieving the author value when it has been set, when it has not been set, when it is explicitly set to null, and when it is set to an empty string. They ensure that the method behaves correctly and returns the expected values in each scenario.
*/

// ********RoostGPT********
package com.baeldung.model;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

public class BookGetAuthorTest {

    private Book book;

    @Before
    public void setUp() {
        book = new Book();
    }

    @Test
    public void retrieveAuthorWhenSet() {
        // Arrange
        String expectedAuthor = "John Doe";
        book.setAuthor(expectedAuthor);

        // Act
        String actualAuthor = book.getAuthor();

        // Assert
        Assert.assertEquals(expectedAuthor, actualAuthor);
    }

    @Test
    public void retrieveAuthorWhenNotSet() {
        // Arrange

        // Act
        String actualAuthor = book.getAuthor();

        // Assert
        Assert.assertNull(actualAuthor);
    }

    @Test
    public void retrieveAuthorAfterSettingToNull() {
        // Arrange
        book.setAuthor(null);

        // Act
        String actualAuthor = book.getAuthor();

        // Assert
        Assert.assertNull(actualAuthor);
    }

    @Test
    public void retrieveAuthorAfterSettingToEmptyString() {
        // Arrange
        String expectedAuthor = "";
        book.setAuthor(expectedAuthor);

        // Act
        String actualAuthor = book.getAuthor();

        // Assert
        Assert.assertEquals(expectedAuthor, actualAuthor);
    }
}
